<Controls:MetroWindow x:Class="BoxUnlocker.Views.PolWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                      xmlns:v="clr-namespace:BoxUnlocker.Views"
                      xmlns:vm="clr-namespace:BoxUnlocker.ViewModels"
                      Title="プロセス選択"
                      Height="194" 
                      Width="232"
                      GlowBrush="{DynamicResource AccentColorBrush}" 
                      ResizeMode="NoResize"
                      WindowStartupLocation="CenterOwner">

    <Window.DataContext>
        <vm:PolListViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Margin="1">
            <!--更新ボタン-->
            <Button Command="{Binding RefreshPolListCommand}"
                    Width="36" 
                    Height="36" 
                    Margin="1,0,0,01"
                    Style="{DynamicResource SquareButtonStyle}" 
                    ToolTip="プロセス一覧の更新" 
                    Cursor="Hand"
                    DockPanel.Dock="Right">
                <Rectangle Width="16" Height="16" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <!--選択ボタン-->
            <Button Content="選　択" 
                    Command="{Binding SelectPolCommand}"
                    Style="{StaticResource AccentedSquareButtonStyle}">
            </Button>
        </DockPanel>
        <DataGrid ItemsSource="{Binding PolList}"
                  SelectedItem="{Binding SelectedPol}"
                  Margin="2"
                  AutoGenerateColumns="False"
                  HeadersVisibility="None"
                  SelectionUnit="FullRow"
                  GridLinesVisibility="Horizontal"
                  IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Id}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="TextAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding MainWindowTitle}"/>
            </DataGrid.Columns>
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding SelectPolCommand}"/>
            </DataGrid.InputBindings>
        </DataGrid>
    </DockPanel>
</Controls:MetroWindow>
